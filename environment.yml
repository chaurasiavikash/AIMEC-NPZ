#!/bin/bash
# setup_with_pip.sh - Setup script using only pip

echo "=== Marine Ecosystem ML Project Setup (pip only) ==="
echo

# Check if Python is installed
if ! command -v python3 &> /dev/null; then
    echo "Error: Python 3 is not installed!"
    exit 1
fi

# Get Python version
PYTHON_VERSION=$(python3 --version 2>&1 | awk '{print $2}')
echo "Found Python version: $PYTHON_VERSION"

# Create project directory
PROJECT_NAME="marine-ecosystem-ml"
echo "Creating project directory: $PROJECT_NAME"
mkdir -p $PROJECT_NAME
cd $PROJECT_NAME

# Create project structure
echo "Creating project structure..."
mkdir -p data models notebooks src results figures

# Create virtual environment
echo "Creating virtual environment..."
python3 -m venv venv

# Create activation reminder
echo "Creating activation script..."
cat > activate_env.txt << EOF
To activate the virtual environment, run:

On Linux/Mac:
source venv/bin/activate

On Windows:
venv\\Scripts\\activate

After activation, install packages with:
pip install -r requirements.txt
EOF

# Create requirements.txt
echo "Creating requirements.txt..."
cat > requirements.txt << 'EOF'
# requirements.txt - Marine Ecosystem ML Project
# Install with: pip install -r requirements.txt

# Core scientific computing
numpy==1.24.3
scipy==1.10.1
pandas==2.0.3

# Visualization
matplotlib==3.7.2
seaborn==0.12.2

# Machine Learning
scikit-learn==1.3.0
joblib==1.3.2

# Jupyter notebooks
jupyter==1.0.0
notebook==7.0.2
ipykernel==6.25.1

# Utilities
tqdm==4.66.1

# Optional packages (uncomment as needed):
# --------------------------------------
# For neural network surrogate:
# torch==2.0.1

# For advanced ML models:
# xgboost==1.7.6
# lightgbm==4.1.0

# For oceanographic data:
# xarray==2023.5.0
# netCDF4==1.6.4

# For interactive plots:
# plotly==5.15.0
EOF

# Create a minimal requirements file for quick start
echo "Creating requirements-minimal.txt..."
cat > requirements-minimal.txt << EOF
numpy==1.24.3
scipy==1.10.1
pandas==2.0.3
matplotlib==3.7.2
scikit-learn==1.3.0
jupyter==1.0.0
EOF

# Create README for setup
echo "Creating SETUP.md..."
cat > SETUP.md << 'EOF'
# Setup Instructions (pip only)

## Quick Start

1. **Activate the virtual environment:**
   ```bash
   # Linux/Mac:
   source venv/bin/activate
   
   # Windows:
   venv\Scripts\activate
   ```

2. **Install packages:**
   ```bash
   # Full installation:
   pip install -r requirements.txt
   
   # OR minimal installation (faster):
   pip install -r requirements-minimal.txt
   ```

3. **Verify installation:**
   ```bash
   python -c "import numpy, scipy, pandas, sklearn; print('All packages imported successfully!')"
   ```

4. **Launch Jupyter:**
   ```bash
   jupyter notebook
   ```

## Package Versions

This project uses specific versions to ensure compatibility:
- Python 3.8+ recommended
- NumPy 1.24.3 (for stability)
- SciPy 1.10.1 (matches NumPy version)
- scikit-learn 1.3.0 (latest stable)

## Troubleshooting

If you encounter issues:

1. **Update pip first:**
   ```bash
   pip install --upgrade pip
   ```

2. **If packages fail to install:**
   ```bash
   # Install one by one to identify issues
   pip install numpy==1.24.3
   pip install scipy==1.10.1
   pip install pandas==2.0.3
   ```

3. **On M1 Macs:** Some packages may need special handling
   ```bash
   pip install --no-cache-dir numpy scipy
   ```
EOF

# Create .gitignore
echo "Creating .gitignore..."
cat > .gitignore << EOF
# Virtual environment
venv/
env/
ENV/

# Python
__pycache__/
*.py[cod]
*$py.class
*.pyc

# Jupyter
.ipynb_checkpoints/
*.ipynb_checkpoints

# Data and models
data/*.csv
data/*.pkl
models/*.pkl
models/*.joblib

# Results and figures
results/*.csv
figures/*.png
figures/*.pdf

# OS
.DS_Store
Thumbs.db

# IDE
.vscode/
.idea/
*.swp
*.swo
EOF

# Create simple test script
echo "Creating test_setup.py..."
cat > test_setup.py << 'EOF'
#!/usr/bin/env python3
"""Test if all required packages are installed correctly."""

def test_imports():
    """Test importing all required packages."""
    packages = {
        'numpy': 'np',
        'scipy': 'scipy',
        'pandas': 'pd',
        'matplotlib.pyplot': 'plt',
        'sklearn': 'sklearn',
        'seaborn': 'sns'
    }
    
    print("Testing package imports...\n")
    
    failed = []
    for package, alias in packages.items():
        try:
            exec(f"import {package} as {alias}")
            print(f"✓ {package:<20} imported successfully")
        except ImportError as e:
            print(f"✗ {package:<20} failed: {e}")
            failed.append(package)
    
    print("\n" + "="*50)
    if not failed:
        print("✓ All packages imported successfully!")
        print("✓ Your environment is ready for the Marine Ecosystem ML project")
    else:
        print(f"✗ Failed to import {len(failed)} package(s): {', '.join(failed)}")
        print("  Please run: pip install -r requirements.txt")
    
    return len(failed) == 0

if __name__ == "__main__":
    test_imports()
EOF

echo
echo "=== Setup Complete! ==="
echo
echo "Next steps:"
echo "1. cd $PROJECT_NAME"
echo "2. source venv/bin/activate  # Linux/Mac"
echo "   OR"
echo "   venv\\Scripts\\activate     # Windows"
echo "3. pip install -r requirements.txt"
echo "4. python test_setup.py  # Verify installation"
echo
echo "See SETUP.md for detailed instructions"